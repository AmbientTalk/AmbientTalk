/*
 ___________  _______    ________                              
/_   \   _  \ \   _  \   \______ \   ____   ___________  ______
 |   /  /_\  \/  /_\  \   |    |  \ /  _ \ /  _ \_  __ \/  ___/
 |   \  \_/   \  \_/   \  |    `   (  <_> |  <_> )  | \/\___ \ 
 |___|\_____  /\_____  / /_______  /\____/ \____/|__|  /____  >
            \/       \/          \/                         \/ */

//Problem: You have 100 doors in a row that are all initially closed. 
def doors[100] { false }; 
//You make 100 passes by the doors.
//The first time through, you visit every door and toggle the door (if the door is closed, you open it; 
//if it is open, you close it). The second time you only visit every 2nd door (door #2, #4, #6, ...). 
//The third time, every 3rd door (door #3, #6, #9, ...), etc, until you only visit the 100th door.
100.doTimes: {|i| 
	i.to: 100 step: i do: { |i| doors[i] := !(doors[i]);  }
};

doors.inject: 1 into: { |x,y| 
	y.ifTrue: {system.println(x) }; 
	x+1; 
};
